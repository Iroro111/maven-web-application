node{
  def mavenHome = tool name: 'maven3.8.6'
  stage('1cloneCode'){
    git "https://github.com/Iroro111/maven-web-application"
  }
    stage('2Test&Build'){
    sh "${mavenHome}/bin/mvn clean package"
   //bat "${mavenHome}/bin/mvn clean package" 
  }
    stage('3codeQuality'){
    sh "${mavenHome}/bin/mvn sonar:sonar"
  }
    stage('4uploadArtifacts'){
    //sh "${mavenHome}/bin/mvn deploy"
    //http://3.142.36.170:8181/mylandmarktech/repository/tesla-web-releases_1/
    //http://3.142.36.170:8181/mylandmarktech/repository/tesla-web-snapshots_1/
  }
    stage('5deploy2UAT'){
    sh "echo 'deploy to UAT'"
    deploy adapters: [tomcat9(credentialsId: 'Tomcat-credentials', path: '', url: 'http://52.14.28.137:8080/')], contextPath: null, war: 'target/*war'
  }
    stage('6approvalGate'){
    sh "echo 'ready for review' "
    timeout(time:5, unit: 'DAYS'){
    input message: 'Application ready for deployment, Please review and approve'}
    }
    stage('7deploy2Prod'){
    sh "sleep 50"
    deploy adapters: [tomcat9(credentialsId: 'Tomcat-credentials', path: '', url: 'http://52.14.28.137:8080/')], contextPath: null, war: 'target/*war'
    }
    stage('8emailNotification'){
    emailext body: '''Hi All,

Check build status

Landmark''', recipientProviders: [developers(), buildUser(), upstreamDevelopers(), brokenBuildSuspects(), contributor()], subject: 'Build Status'
    }
}

